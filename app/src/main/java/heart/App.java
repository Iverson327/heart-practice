/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package heart;
import processing.core.*;
import processing.core.PApplet;
import processing.core.PImage;
import processing.data.JSONObject;
import processing.data.JSONArray;
import processing.core.PFont;
import processing.event.MouseEvent;

import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.TimeUnit;

import java.util.ArrayList;

import java.awt.Font;
import java.io.*;
import java.util.*;
import java.lang.Math;

public class App extends PApplet {
    private ArrayList<PVector> heart = new ArrayList<PVector>();
    private float a = 0;
    private boolean pink = true; 
    private float R = 10;
    private float X = R * 16 * pow(sin(0), 3);
    private float Y = -R * (13 * cos(0) - 5 * cos(2 * 0) - 2 * cos(3 * 0) - cos(4 * 0));
    private boolean start = true;

    @Override
    public void settings(){
        size(400, 400);
    }

    public void setup(){
        frameRate(60);
    }

    @Override
    public void draw(){
        background(0);
        translate(width/2, height/2);
        if(pink){
            fill(255, 110, 180);
        }else{
            fill(130, 250, 85);
        }
        
        stroke(255);
        beginShape();
        for(PVector v: heart){
            vertex(v.x, v.y);
        }
        endShape();
        float r = 10;
        float x = r * 16 * pow(sin(a), 3);
        float y = -r * (13 * cos(a) - 5 * cos(2 * a) - 2 * cos(3 * a) - cos(4 * a));
        if((Y - y < 0.01 && Y - y > -0.01) && !start){
            while(heart.size() > 0){
                heart.remove(0);
            }
            pink = !pink;
            start = true;
            a = 0;
            x = X;
            y = Y;
            r = R;
        }else{
            start = false;
        }
        heart.add(new PVector(x, y));
        a += 0.01;
    }


    public static void main(String[] args) {
        PApplet.main("heart.App");
        System.out.println("here's the heart you were asking for");
    }
}
